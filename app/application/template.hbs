<h1>Content Kit Experiments</h1>

<div class="experiment">
  <h2>Persist content to Firebase</h2>

  <p>
    This saves content to Firebase on-change and also reacts to changes in Firebase.
  </p>

  {{my-content-kit-editor mobiledoc=editorContent on-change=(action "editorChanged")}}

  <pre>{{stringify-json _editorContent}}</pre>
</div>

<div class="experiment">
  <h2>Capture enter to submit</h2>

  <p>
    Pressing enter should trigger an action &amp; not create a new line.
  </p>
  <p>
    Shift-enter should still create a new line.
  </p>

  {{my-content-kit-editor enter=(action "captureEnter")}}

  {{#if enterCaptured}}
    <p>Enter captured</p>
  {{/if}}
</div>


<div class="experiment">
  <h2>Capture tab</h2>

  <p>
    Pressing tab should trigger an action &amp; and not move focus.
  </p>

  {{my-content-kit-editor tab=(action "captureTab")}}

  {{#if tabCaptured}}
    <p>Tab captured</p>
  {{/if}}
</div>

<div class="experiment">
  <h2>Cursor exit detection</h2>

  <p>Detect if pressing cursor at the extremes of an editor:</p>
  <ul>
    <li>Up on the first line of an editor</li>
    <li>Left at the start of an editor</li>
    <li>Bottom on the last line of an editor</li>
    <li>Right at the end of an editor</li>
  </ul>

  {{my-content-kit-editor
    exit-up=(action "cursorExit" "up")
    exit-down=(action "cursorExit" "down")
    exit-left=(action "cursorExit" "left")
    exit-right=(action "cursorExit" "right")
  }}

  {{#if cursorExit}}
    Cursor exited {{cursorExit}}
  {{/if}}
</div>

<div class="experiment">
  <h2>Focusing</h2>

  <p>
    Related to the previous experiment, we should be able to programatically focus the editor externally.
  </p>

  <p>
    <button {{action (action "focusStart")}}>Focus Start</button>
    <button {{action (action "focusEnd")}}>Focus End</button>
  </p>

  {{my-content-kit-editor register=(action "registerEditor")}}

</div>